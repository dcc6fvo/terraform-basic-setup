terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0"
    }
  }
}

provider "aws" {
  region = "sa-east-1"
  profile = "default"
  alias = "sao-paulo"
}

resource "aws_vpc" "main" {
  cidr_block = "192.168.0.0/16"

  tags = {
	  Name = "main"
  }
}

variable "public_subnet_cidrs" {
  type        = list(string)
  description = "Public Subnet CIDR values"
  default     = ["192.168.0.0/24", "192.168.2.0/24"]
}

 
variable "private_subnet_cidrs" {
  type        = list(string)
  description = "Private Subnet CIDR values"
  default     = ["192.168.1.0/24", "192.168.3.0/24"]
}

variable "azs" {
  type        = list(string)
  description = "Availability Zones"
  default     = ["sa-east-1a", "sa-east-1b", "sa-east-1c"]
}

 resource "aws_subnet" "public_subnets" {
  count      = length(var.public_subnet_cidrs)
  vpc_id     = aws_vpc.main.id
  cidr_block = element(var.public_subnet_cidrs, count.index)
  availability_zone = element(var.azs, count.index)

  depends_on = [
    aws_vpc.main
  ]

  tags = {
    Name = "Public Subnet ${count.index + 1}"
  }
}

resource "aws_subnet" "private_subnets" {
  count      = length(var.private_subnet_cidrs)
  vpc_id     = aws_vpc.main.id
  cidr_block = element(var.private_subnet_cidrs, count.index)
  availability_zone = element(var.azs, count.index)

  depends_on = [
    aws_vpc.main
  ]

  tags = {
    Name = "Private Subnet ${count.index + 1}"
  }
}

resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.main.id
  tags = {
    Name = "Project VPC IG"
  }
}

resource "aws_route_table" "second_rt" {

  vpc_id = aws_vpc.main.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }

  tags = {
    Name = "2nd Route Table"
  }
}

resource "aws_route_table_association" "public_subnet_asso" {
  count = length(var.public_subnet_cidrs)
  subnet_id      = element(aws_subnet.public_subnets[*].id, count.index)
  route_table_id = aws_route_table.second_rt.id
}

resource "aws_security_group" "acesso_ssh_icmp_publico" {
  name        = "acesso_ssh_icmp_publico"
  description = "acesso_ssh_icmp_publico"
  vpc_id      = aws_vpc.main.id

  ingress {
    description      = "ssh from VPC"
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  ingress {
    from_port = -1
    to_port = -1
    protocol = "icmp"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  tags = {
    Name = "acesso_ssh_icmp_publico"
  }
}

resource "aws_security_group" "acesso_ssh_icmp_privado" {
  name        = "acesso_ssh_icmp_privado"
  description = "acesso_ssh_icmp_privado"
  vpc_id      = aws_vpc.main.id

  ingress {
    description      = "ssh from VPC"
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = [aws_vpc.main.cidr_block]
  }

  ingress {
    from_port = -1
    to_port = -1
    protocol = "icmp"
    cidr_blocks      = [aws_vpc.main.cidr_block]
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
  }

  tags = {
    Name = "acesso_ssh_icmp_privado"
  }
}

resource "aws_instance" "dev-pub-1" {
    ami = "ami-04b3c23ec8efcc2d6"
    instance_type = "t2.micro"
    key_name = "terraform-aws"
    associate_public_ip_address = true
    subnet_id  = aws_subnet.public_subnets[0].id
    vpc_security_group_ids = [aws_security_group.acesso_ssh_icmp_publico.id]

    tags = {
        Name = "dev-pub-1"
    }
}

resource "aws_instance" "dev-priv" {
    count = 4
    ami = "ami-04b3c23ec8efcc2d6"
    instance_type = "t2.micro"
    key_name = "terraform-aws"
    associate_public_ip_address = false
    subnet_id  = aws_subnet.private_subnets[0].id
    vpc_security_group_ids = [aws_security_group.acesso_ssh_icmp_privado.id]

    tags = {
        Name = "dev-priv-${count.index}"
    }
}